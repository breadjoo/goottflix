name: Deploy to Amazon EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    name: Deploy Spring Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build & push (multi-stage)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_REPO }}:latest
          no-cache: true

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          envs: GITHUB_SHA, ENV_FILE
          script: |
            echo "✅ .env 파일 세팅"
            echo "${{ secrets.ENV_FILE }}" > /home/ubuntu/.env

            echo "✅ 기존 backend 컨테이너 종료 및 제거"
            sudo docker ps -q --filter "name=backend" | grep -q . && sudo docker stop backend && sudo docker rm backend || echo "No existing backend container."

            echo "✅ Docker 캐시 이미지 정리"
            sudo docker container prune -f
            sudo docker image prune -f
            sudo docker image rm -f ${{ secrets.DOCKER_REPO_BACKEND }}:latest || echo "백엔드 이미지가 이미 삭제됨"

            echo "✅ 최신 backend, frontend 이미지 pull"
            sudo docker pull ${{ secrets.DOCKER_REPO_BACKEND }}:latest
            sudo docker pull ${{ secrets.DOCKER_REPO_FRONTEND }}:latest

            echo "✅ 컨테이너 재배포"
            sudo docker compose up -d --build

            echo "✅ 배포 후 컨테이너 상태 확인"
            sudo docker ps -a
